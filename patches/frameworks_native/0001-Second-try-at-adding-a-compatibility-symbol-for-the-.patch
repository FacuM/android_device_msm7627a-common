From 22d09deaff228c9af0bc14f6a5e3f19a5c465564 Mon Sep 17 00:00:00 2001
From: grace5921 <androidlover5842@gmail.com>
Date: Mon, 2 Jan 2017 00:29:28 +0530
Subject: [PATCH] Second try at adding a compatibility symbol for the
 MemoryBase constructor. Third-party libraries are currently trying to use the
 MemoryBase constructor but failing because we fixed the definition of
 ssize_t. This is a stop-gap for users of this private API until we can get
 them fixed.

Bug: 8253769
Change-Id: Ie7c86f45fa39cb53539cab0ffe8585a585656714
---
 libs/binder/MemoryBase.cpp | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/libs/binder/MemoryBase.cpp b/libs/binder/MemoryBase.cpp
index 033066bea..54093cb87 100644
--- a/libs/binder/MemoryBase.cpp
+++ b/libs/binder/MemoryBase.cpp
@@ -14,6 +14,7 @@
  * limitations under the License.
  */
 
+#define LOG_TAG "MemoryBase"
 
 #include <stdlib.h>
 #include <stdint.h>
@@ -44,3 +45,12 @@ MemoryBase::~MemoryBase()
 
 // ---------------------------------------------------------------------------
 }; // namespace android
+
+// Backwards compatibility for libdatabase_sqlcipher (http://b/8253769).
+extern "C" void _ZN7android10MemoryBaseC1ERKNS_2spINS_11IMemoryHeapEEEij(void*, void*, ssize_t, size_t);
+extern "C" void _ZN7android10MemoryBaseC1ERKNS_2spINS_11IMemoryHeapEEElj(void* obj, void* h, long o, unsigned int size) {
+    _ZN7android10MemoryBaseC1ERKNS_2spINS_11IMemoryHeapEEEij(obj, h, o, size);
+    ALOGW("Using temporary compatibility workaround for usage of MemoryBase "
+          "private API. Please fix your application!");
+}
+
-- 
2.11.0

